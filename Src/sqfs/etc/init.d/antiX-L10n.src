#!/bin/sh

### BEGIN INIT INFO
# Provides:          antiX-l10n
# Required-Start:    udev
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:
# Default-Stop:
# Short-Description: antiX-l10n
# Description: Sets timezone, hostname, and console fonts.  Runs update-menus and update-locale
### END INIT INFO

case "$1" in
    start) 
         ;;
    stop)
        exit 0
         ;;
    *)
         echo "Usage: $0 {start|stop}"
         exit 1
         ;;
esac

# For debugging
CMDLINE=${CMDLINE:-$(cat /proc/cmdline)}

for param in $CMDLINE; do
    case "$param" in
            lang=*)    CMD_LANG=${param#*=}; MUST_RUN=true ;;
        hostname=*)    CMD_HOST=${param#*=}; MUST_RUN=true ;;
              tz=*)      CMD_TZ=${param#*=}; MUST_RUN=true ;;
         confont=*)    CMD_FONT=${param#*=}; MUST_RUN=true ;;
          conkbd=*)    CMD_KEYS=${param#*=}; MUST_RUN=true ;;
          splash=*)      SPLASH=true                       ;;
    esac
done

if [ -n "$SPLASH" ] && [ -e /proc/fb ] && grep -vq VGA /proc/fb; then
    which splash-term &>/dev/null && splash-term default
fi

[ "$MUST_RUN" ] || exit 0

# FIXME: check to see if any of these are needed
umask 022
# Ignore these signals: INT, TERM, SEGV
trap "" 2 3 11

. /usr/share/antiX/lib/antiX-init-utils.sh

start_init_logging
load_translation


# Start block of code that is sent to the log file
{
    echo_script "Localizing console and timezone" $0

    #-jbb: for debugging
    unset COUNTRY WM_LANG KEYBOARDS KEYTABLE LANG MIRROR TZ XKBLAYOUT CONSOLE_FONT

    # Read in: COUNTRY WM_LANG KEYBOARDS KEYTABLE LANG MIRROR TZ XKBLAYOUT CONSOLE_FONT
    [ "$CMD_LANG" ] && get_init_lang $CMD_LANG "error"

    # CMD_TZ overrides value from LANG file above
    # Only set timezone via explicit boot parameter after the first time.
    TZ=${CMD_TZ:-$TZ}
    if [ "$TZ" ]; then

        if first_write /etc/localtime || [ "$CMD_TZ" ]; then

            # Check for valid tz string
            if [ -e /usr/share/zoneinfo/$TZ ]; then
                echo_live "Setting timezone and localtime to %s" "$(pquote $TZ)"
                cp -f /usr/share/zoneinfo/$TZ /etc/localtime
                echo $TZ > /etc/timezone
                local area=$(echo $TZ | cut -d/ -f1)
                local zone=$(echo $TZ | cut -d/ -f2)
            cat <<Time_Zone | sed "s/\\t/\t/g" | debconf-set-selections
tzdata\ttzdata/Zones/$area\tselect\t$zone
tzdata\ttzdata/Areas\tselect\t$area
Time_Zone
               
            else
                error "Unknown time zone %s" "$(pquote $TZ)"
            fi
        fi
    fi

    if [ "$CMD_HOST" ]; then
        echo_live "Setting hostname to %s" "$(pquote $CMD_HOST)"
        echo "$CMD_HOST" > /etc/hostname
        hostname -F /etc/hostname
    fi
    
    if [ "$LANG" ]; then
        echo_live "Setting locale to %s" "$(pquote $LANG)"

        # ensure that /etc/default/locale is an ordinary file and not a symlink
        # FIXME: (?? -jbb)
        [ -L /etc/default/locale ] && rm -f /etc/default/locale

        export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
        update-locale "LANG=$LANG"
        dpkg-reconfigure -f noninteractive locales

        # update fluxbox/icewm menus for locale
        update-menus
    fi


    KEYTABLE=${CMD_KEYS:-$KEYTABLE}
    if [ -n "$KEYTABLE" ]; then
        echo_live "Configuring console for a %s keymap" "$(pquote $KEYTABLE)"
        # install keymap and set console font
        rm -f /etc/console/*
        #/usr/sbin/install-keymap "$KEYTABLE"
        loadkeys -q "$KEYTABLE"
    fi
    

    CONSOLE_FONT=${CMD_FONT:-$CONSOLE_FONT}
    if [ "$CONSOLE_FONT" ]; then
        FFILE=/usr/share/consolefonts/$CONSOLE_FONT
        if [ -e $FFILE -o -e $FFILE.gz -o -e $FFILE.psf.gz -o -e $FFILE.psfu.gz \
            -o -e $FFILE.cp.gz -o -e $FFILE.cp ]; then
            echo_live "Setting console font to %s" $(pquote $CONSOLE_FONT)
            setfont $CONSOLE_FONT
        else
            error "Unknown console font %s" confont "$(pquote $CONSOLE_FONT)"
        fi
    fi

} 2>&1 | tee -a $INIT_LOG_FILE 

exit 0
